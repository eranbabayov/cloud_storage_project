<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Patient Medications</title>
    <link rel="stylesheet" href="../css/bootstrap.min.css">
    <link rel="stylesheet" href="../css/font-awesome.min.css">
    <link rel="stylesheet" href="../css/themify-icons.css">
    <link rel="stylesheet" href="../css/nice-select.css">
    <link rel="stylesheet" href="../css/flaticon.css">
    <link rel="stylesheet" href="../css/style.css">
    <!-- Add the background image here -->
    <style>
        body {
            background-image: url('../img/edit_diseases_background.jpg'); /* Replace with your image path */
            background-size: cover; /* Cover the entire area */
            background-position: center; /* Center the image */
            background-repeat: no-repeat; /* Do not repeat the image */
            background-attachment: fixed; /* Fixed background image when scrolling */
        }
        .boxed-btn3 {
            display: inline-block;
            padding: 10px 20px; /* Adjust padding as needed */
            font-size: 16px; /* Adjust font size */
            border: 2px solid #ccc; /* Example border */
            border-radius: 5px; /* Rounded corners */
            background-color: #f8f9fa; /* Background color */
            color: #333; /* Text color */
            text-align: center;
            text-decoration: none;
            transition: background-color 0.3s, color 0.3s;
        }

        /* Add hover effects */
        .boxed-btn3:hover {
            background-color: #333;
            color: #fff;
        }
        
        #patientImageContainer {
            width: 165px;
            height: 165px;
            border: 3px solid #cccccc;
            padding: 2px;
            background-color: white;
            display: none; /* Start with the container hidden */
            align-items: center;
            justify-content: center;
            overflow: hidden;
            position: absolute; /* Position the container absolutely */
            top: 200px; /* Adjust the top position */
            right: 350px; /* Adjust the right position */
            z-index: 10; /* Ensure it stays on top of other content */
        }

        #patientImage {
            max-width: 100%;
            max-height: 100%;
            object-fit: cover;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-xl-12 text-center mt-5">
                <h2>Edit Patient Medications</h2>
                <p>Select a patient to add, remove, or edit medications.</p>
            </div>
        </div>

        <div class="row justify-content-center mt-4">
            <div class="col-xl-6">
                <form action="/patient_chronic_disease/edit-diseases" method="Post">
                    <!-- Patient Selection -->
                    <div class="form-group">
                        <label for="patient-select">Choose Patient</label>
                        <select class="form-select wide" id="patient-select" name="patient_id" required onchange="updateMedication()">
                            <option value="" disabled selected>Select a patient</option>
                            <% patients.forEach(function(patient) { %>
                                <option value="<%= patient.Id %>" data-image="<%= patient.ImageUrl %>"><%= patient.Name %></option>
                            <% }) %>
                        </select>
                    </div>

                    <!-- Add Medication Section -->
                    <div class="form-group mt-4">
                        <label for="medication-select">Choose Medication to Add</label>
                        <select class="form-select wide" id="medication-select" name="medication_id_add" >
                            <% medications.forEach(function(medication) { %>
                                <option value="<%= medication.MedicationName %>"><%= medication.MedicationName %></option>
                            <% }) %>
                        </select>
                    </div>

                    <!-- Remove Medication Section -->
                    <div class="form-group mt-4">
                        <label for="remove-medication-select">Choose Medication to Remove</label>
                        <select class="form-select wide" id="remove-medication-select" name="medication_id_remove">
                            <% currentMedications.forEach(function(medication) { %>
                                <option value="<%= medication.patient_id %>"><%= medication.MedicationName %></option>
                            <% }) %>
                        </select>
                    </div>

                    <div class="text-center mt-5">
                        <button type="button" class="boxed-btn3 large-width" onclick="addMedication()"> Add Medications</button>
                        <button type="button" class="boxed-btn3 large-width" onclick="removeMedication()">Remove Medications</button>

                        <a href="/" class="boxed-btn3 large-width">Back to Homepage</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!-- Patient Image Display Section -->
    <div id="patientImageContainer">
        <img id="patientImage" src="" alt="Patient Image">
    </div>

    <!-- JS here -->
    <script src="../js/vendor/jquery-1.12.4.min.js"></script>
    <script src="../js/bootstrap.min.js"></script>
    <script src="../js/nice-select.min.js"></script>
    <script src="../js/main.js"></script>
    <script src="/image-handler.js"></script>

    <!-- Inline JS for dynamic functionalities -->
    <script>
        const currentMedications = <%- JSON.stringify(currentMedications) %>;
        const patientsOptionalMedicationsDict = <%- JSON.stringify(patientsOptionalMedicationsDict) %>;

        function updateMedication() {
            const patientId = document.getElementById('patient-select').value;
            const medicationSelect = document.getElementById('medication-select'); // Define medicationSelect here
            if (!patientId) {
            console.error('No patient selected!');
            alert('No patient selected')
            return;
            }
            // Clear previous options in the medication select dropdown
            medicationSelect.innerHTML = '';

            if (patientsOptionalMedicationsDict[patientId] === "Choosen patients feeling good") {
                const option = document.createElement('option');
                option.textContent = "No medications needed";
                medicationSelect.appendChild(option);
            } else {
                const medications = patientsOptionalMedicationsDict[patientId];
                medications.forEach(medication => {
                    const option = document.createElement('option');
                    option.value = medication;  // Medication name
                    option.textContent = medication;
                    medicationSelect.appendChild(option);
                });
            }

            const removeMedicationSelect = document.getElementById('remove-medication-select');
            // Clear the current options
            removeMedicationSelect.innerHTML = '';
            // Filter diseases for the selected patient
            const filteredMedication = currentMedications.filter(medication => medication.patient_id === parseInt(patientId));
            // Populate the remove-medication-select dropdown with filtered medication
            filteredMedication.forEach(medication => {
                // Split the medication string by comma
                const medicationsArray = medication.Medication.split(',');
                // Loop through each medication and add it as a separate option
                medicationsArray.forEach(singleMedication => {
                    const option = document.createElement('option');
                    option.value = medication.medication_id;  // Ensure this matches your data structure
                    option.textContent = singleMedication.trim();  // Trim any extra whitespace
                    removeMedicationSelect.appendChild(option);
                });
            });

            const patientImageUrl = patientSelect.options[patientSelect.selectedIndex].getAttribute('data-image');
            const patientImageContainer = document.getElementById('patientImageContainer');
            const patientImage = document.getElementById('patientImage');
            if (patientImageUrl) {
                patientImage.src = patientImageUrl;
                patientImageContainer.style.display = 'flex'; // Show the container

            } else {
                patientImageContainer.style.display = 'none'; // Hide the container if no image
            }


        }


        // function validateSettingNewMedication(new_medication, medicationsCode, )
        
        function removeMedication() {
            const patientId = document.getElementById('patient-select').value;
            const removeMedicationSelect = document.getElementById('remove-medication-select');
            const selectedMedication = removeMedicationSelect.options[removeMedicationSelect.selectedIndex].text;
            alert(selectedMedication)

            if (!patientId || !selectedMedication) {
                alert('Please select both a patient and a medication to remove.');
                return;
            }
        
            fetch('/patient_medications/remove_medication', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ patient_id: patientId, medication: selectedMedication }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Medication removed successfully!');
                    // Optionally, refresh the page or update the UI
                } else {
                    alert(data.message || 'Failed to remove medication.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert(error)
                alert('An error occurred while removing the medication.');
            });
        }

        function addMedication() {
            const patientId = document.getElementById('patient-select').value;
            const medication = document.getElementById('medication-select').value;

            if (!patientId || !medication) {
                alert('Please select both a patient and a medication.');
                return;
            }
            fetch('/patient_medications/add_medication', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ patient_id: patientId, medication: medication }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Medication added successfully!');
                    // Optionally, refresh the page or update the UI
                } else {
                    alert(data.message || 'Failed to add medication.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while adding the medication.'+ error);
            });
        }




    </script>
</body>
</html>